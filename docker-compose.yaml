x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<time>\d{4}-\d{2}-\d{2} \d{1,2}:\d{2}:\d{2},d{3}) (?P<message>(?s:.*))$$'

version: "3.4"

services:
  loki:
    image: grafana/loki:2.8.3
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
  
  footy-sync:
    build: ./
    container_name: footy-sync
    image: newyeti/footy-sync
    ports:
      - "8001:8000"
    depends_on:
      - loki
    environment:
      APP_NAME: footy-sync
      APP_ENV: dev
      INFRA: $INFRA
      RAPID_API: $RAPID_API
      AUTH0: $AUTH0
      OTLP_GRPC_ENDPOINT: http://tempo:4317
    logging: *default-logging

  
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    logging: *default-logging
  
  tempo:
    image: grafana/tempo:2.1.1
    container_name: tempo
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - "14250:14250"
      - "3200:3200" # tempo
      - "4317:4317" # otlp grpc
      - "4318:4318"  # otlp http
    depends_on:
      - loki
    logging: *default-logging

  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./grafana_data:/var/lib/grafana/
      - ./etc/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
      - prometheus
    logging: *default-logging

